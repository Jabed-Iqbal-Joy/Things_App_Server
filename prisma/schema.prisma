// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model task {
  id            String          @id @default(uuid())
  name          String?       
  note          String?
  projectId     String?
  project       project?    @relation(fields: [projectId],references: [id])
  userId        String
  user          user?       @relation(fields: [userId],references: [id])
  task_tag      task_tag[]
  subtasks      subtask[]
  when          String?
  deadline      DateTime?
  status     Boolean      @default(false)
  is_deleted  Boolean     @default(false)
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
}

model task_tag{
  id            String          @id @default(uuid())
  taskId        String      
  task          task         @relation(fields: [taskId],references: [id])
  tagId         String
  tag           tag          @relation(fields: [tagId],references: [id])
}


model tag{
  id            String          @id @default(uuid())
  name          String
  notes         String?
  tasks         task_tag[]
  projects      project_tag[]
}

model subtask{
  id            String          @id @default(uuid())
  name          String
  taskId        String?
  task          task?   @relation(fields: [taskId],references: [id])
  created_at     DateTime   @default(now())
}

model project_tag{
  id  String @id @default(uuid())
  projectId String
  project   project   @relation(fields: [projectId],references: [id])
  tagId     String
  tag       tag       @relation(fields: [tagId],references: [id])
}

model project{
  id String @id @default(uuid())
  name  String
  notes String?
  tasks  task[]
  tags  project_tag[]
  status Boolean @default(false)
  is_deleted  Boolean     @default(false)
  userId  String
  user    user  @relation(fields: [userId],references: [id])
  created_at    DateTime   @default(now())
}

model user{
  id  String @id @default(uuid())
  email String  @unique
  name String?
  password String
  projects project[]
  tasks task[]
  created_at DateTime    @default(now())
}
